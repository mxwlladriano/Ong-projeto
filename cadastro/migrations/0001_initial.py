# Generated by Django 4.1 on 2024-04-01 23:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Acolhimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataEntrada', models.DateField(verbose_name='Data de Entrada')),
                ('dataSaida', models.DateField(blank=True, null=True, verbose_name='Data de Saída')),
                ('causaAcolhimento', models.TextField(verbose_name='Causa do Acolhimento')),
                ('acompanhamentoAudiencia', models.TextField(blank=True, null=True, verbose_name='Está em Acompanhamento de Audiência')),
                ('guiaDeAcolhimento', models.BooleanField(blank=True, null=True, verbose_name='Tem guia de Acolhimento?')),
                ('conduzidaAoAcolhimento', models.CharField(blank=True, choices=[('conselho_tutelar', 'Conselho Tutelar'), ('poder_judiciario', 'Poder Judiciário'), ('outro', 'Outro')], max_length=255, null=True, verbose_name='Conduzida ao Acolhimento por')),
                ('conduzidaAoAcolhimentoOutros', models.TextField(blank=True, null=True, verbose_name='Descrição (se escolhido "Outros")')),
                ('documentosRecebidos', models.CharField(blank=True, choices=[('declaracao_nascido_vivo', 'Declaração de Nascido Vivo'), ('certidao_nascimento', 'Certidão de Nascimento'), ('carteira_vacinacao', 'Carteira de Vacinação'), ('cartao_sus', 'Cartão do SUS'), ('carteira_identidade', 'Carteira de Identidade'), ('cpf', 'CPF'), ('titulo_eleitor', 'Título de Eleitor'), ('matricula_escolar', 'Matrícula Escolar'), ('materiais_escolares', 'Materiais Escolares'), ('outros', 'Outros')], max_length=255, null=True, verbose_name='Documentos do acolhido recebidos')),
                ('documentosRecebidosOutros', models.TextField(blank=True, null=True, verbose_name='Descrição (se escolhido "Outros")')),
                ('objetosPessoaisRecebidos', models.TextField(blank=True, null=True, verbose_name='Objetos pessoais recebidos')),
                ('condicoesFisicas', models.TextField(blank=True, null=True, verbose_name='Condições físicas')),
                ('profissionalQueRecebeu', models.CharField(blank=True, max_length=255, null=True, verbose_name='Profissional que recebeu')),
            ],
        ),
        migrations.CreateModel(
            name='CaracterizacaoMausTratos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supostoAgressor', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('suposto_agressor_pai', 'Pai'), ('suposto_agressor_mae', 'Mãe'), ('suposto_agressor_filho', 'Filho(s'), ('suposto_agressor_padastro', 'Padastro'), ('suposto_agressor_madastra', 'Madastra'), ('suposto_agressor_vizinho', 'Vizinho'), ('suposto_agressor_conjuge', 'Cônjuge'), ('suposto_agressor_outros', 'Outros')], max_length=255, null=True, verbose_name='Suposto Agressor')),
                ('supostoAgressorOutrosDescricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outros (Suposto Agressor)')),
                ('tipoViolencia', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('tipo_violencia_intrafamiliar', 'Intrafamiliar'), ('tipo_violencia_extrafamiliar', 'Extrafamiliar'), ('tipo_violencia_negligencia', 'Negligência'), ('tipo_violencia_fisica', 'Física'), ('tipo_violencia_psicologica_moral', 'Psicológica/Moral'), ('tipo_violencia_tortura', 'Tortura'), ('tipo_violencia_trafico_humanos', 'Tráfico de Humanos'), ('tipo_violencia_financeira_economica', 'Financeira/Econômica'), ('tipo_violencia_trabalho_infantil', 'Trabalho Infantil'), ('tipo_violencia_discriminacao_genero', 'Discriminação de Gênero'), ('tipo_violencia_sexual_descricao', 'Violência Sexual (Descrição)'), ('tipo_violencia_outros', 'Outros')], max_length=255, null=True, verbose_name='Tipo de Violência')),
                ('tipoViolenciaOutrosDescricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outros (Tipo de Violência)')),
                ('tipoViolenciaSexualDescricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Violência Sexual (Descrição)')),
                ('caracteristicaAgressao', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('caracteristica_agressao_uma_vez', 'Uma vez'), ('caracteristica_agressao_mais_de_uma_vez', 'Mais de uma vez')], max_length=255, null=True, verbose_name='Característica da Agressão')),
                ('caracteristicaAgressaoDataPeriodo', models.DateField(blank=True, null=True, verbose_name='Data ou Período da Agressão')),
                ('caracteristicaAgressaoPeriodo', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('caracteristica_agressao_manha', 'Manhã'), ('caracteristica_agressao_tarde', 'Tarde'), ('caracteristica_agressao_noite', 'Noite')], max_length=255, null=True, verbose_name='Período da Agressão')),
                ('localOcorrencia', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('local_ocorrencia_residencia', 'Residência'), ('local_ocorrencia_habitacao_coletiva', 'Habitação Coletiva'), ('local_ocorrencia_escola', 'Escola'), ('local_ocorrencia_espaco_pratica_esportiva', 'Espaço de Prática Esportiva'), ('local_ocorrencia_bar_ou_similar', 'Bar ou Similar'), ('local_ocorrencia_via_publica', 'Via Pública'), ('local_ocorrencia_comercio_servicos', 'Comércio/Serviços'), ('local_ocorrencia_industria_construcao', 'Indústria/Construção'), ('local_ocorrencia_outro', 'Outro')], max_length=255, null=True, verbose_name='Local da Ocorrência')),
                ('localOcorrenciaOutroDescricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro (Local da Ocorrência)')),
                ('enderecoLocalOcorrencia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço Local Ocorrência')),
            ],
        ),
        migrations.CreateModel(
            name='ComposicaoFamiliar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Familiar')),
                ('idade', models.IntegerField(blank=True, null=True, verbose_name='Idade do Familiar')),
                ('parentesco', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parentesco com o Responsável')),
                ('escolaridade', models.CharField(blank=True, choices=[('fundamental', 'Fundamental'), ('medio', 'Médio'), ('superior', 'Superior')], max_length=255, null=True, verbose_name='Escolaridade do Familiar')),
                ('ocupacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ocupação do Familiar')),
                ('renda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Renda do Familiar')),
            ],
        ),
        migrations.CreateModel(
            name='DadosResponsavel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Responsável')),
                ('idade', models.IntegerField(blank=True, null=True, verbose_name='Idade do Responsável')),
                ('dataNascimento', models.DateField(verbose_name='Data de Nascimento do Responsável')),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=255, null=True, verbose_name='Sexo do Responsável')),
                ('cor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cor do Responsável')),
                ('enderecoResponsavel', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereco do Responsável')),
                ('telefone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefone do Responsável')),
            ],
        ),
        migrations.CreateModel(
            name='DenuncianteConduta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denuncianteGrauRelacionamento', models.CharField(blank=True, choices=[('denunciante_propria_vitima', 'Própria vítima'), ('denunciante_outros', 'Outros'), ('denunciante_nao_cabe', 'Não cabe(s')], max_length=255, null=True, verbose_name='Grau de Relacionamento')),
                ('denuncianteGrauRelacionamentoOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro - Grau de Relacionamento')),
                ('condutaEspecificar', models.CharField(blank=True, choices=[('conduta_encaminhamento', 'Encaminhamento'), ('conduta_outros', 'Outros')], max_length=255, null=True, verbose_name='Especificar')),
                ('condutaEspecificarOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro - Especificar')),
                ('condutaSinaisViolencia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sinais de Violência')),
                ('assistenciaPostoSaude', models.CharField(blank=True, choices=[('assistencia_hospital_regional', 'Hospital Regional'), ('assistencia_nasf', 'NASF'), ('assistencia_tfd', 'TFD')], max_length=255, null=True, verbose_name='Posto de Saúde')),
                ('assistenciaAgenteSaude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Agente de Saúde')),
                ('resideCom', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('reside_pai', 'Pai'), ('reside_mae', 'Mãe'), ('reside_padastro', 'Padastro'), ('reside_madastra', 'Madastra'), ('reside_tios', 'Tios'), ('reside_avos', 'Avós'), ('reside_irmaos', 'Irmãos'), ('reside_filhos', 'Filhos'), ('reside_mora_sozinho', 'Mora só'), ('reside_conjuge', 'Cônjuge'), ('reside_outro', 'Outro')], max_length=255, null=True, verbose_name='Reside com ?')),
                ('resideOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro - Especificar')),
            ],
        ),
        migrations.CreateModel(
            name='OrigemDemanda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origemDemandaPoliticasPublicas', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('procura_espontanea', 'Procura Espontânea'), ('creas', 'Creas'), ('conselho_tutelar', 'Conselho Tutelar'), ('outros_politicas_publicas', 'Outros Políticas Públicas')], max_length=255, null=True, verbose_name='Origem de Demanda - Políticas Públicas')),
                ('origemDemandaPoliticasPublicasOutros', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outros Políticas Públicas')),
                ('origemDemandaOutrosIndique', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('outros_indique', 'Outros, indique')], max_length=255, null=True, verbose_name='Origem de Demanda - Outros, indique')),
                ('origemDemandaOutrosIndiqueOutros', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro Texto Outros, Indique')),
                ('origemDemandaEncaminhamento', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('relatorio_informativo', 'Relatório informativo'), ('paf', 'PAF'), ('outro_encaminhamento', 'Outro Encaminhamento')], max_length=255, null=True, verbose_name='Origem de Demanda - Encaminhamento')),
                ('origemDemandaEncaminhamentoOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro Encaminhamento')),
                ('origemDemandaPerfilTitular', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('crianca_adolescente', 'Criança e Adolescente'), ('homem', 'Homem'), ('outro_perfil_titular', 'Outro Perfil Titular')], max_length=255, null=True, verbose_name='Origem de Demanda - Perfil Titular')),
                ('origemDemandaPerfilTitularOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro Perfil Titular')),
                ('origemDemandaEstuda', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('estuda', 'Estuda')], max_length=255, null=True, verbose_name='Origem de Demanda - Estuda')),
                ('origemDemandaTrabalha', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('trabalha', 'Trabalha')], max_length=255, null=True, verbose_name='Origem de Demanda - Trabalha')),
                ('origemDemandaProgramasSociais', multiselectfield.db.fields.MultiSelectField(choices=[('insercao_programas_sociais', 'Inserção em programas sociais'), ('pbf', 'PBF'), ('outro_programa_social', 'Outro Programa Social')], max_length=255, verbose_name='Origem de Demanda - Programas Sociais')),
                ('origemDemandaProgramasSociaisOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro Programa Social')),
                ('origemDemandaDeficiencia', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('apresenta_deficiencia_fisica', 'Apresenta deficiência física'), ('fisica', 'Física'), ('outro_deficiencia', 'Outra Deficiência')], max_length=255, null=True, verbose_name='Origem de Demanda - Deficiência')),
                ('origemDemandaDeficienciaOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outra Deficiência')),
            ],
        ),
        migrations.CreateModel(
            name='SituacaoHabitacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moradia', models.CharField(blank=True, choices=[('moradia_casa', 'Casa'), ('moradia_apto', 'Apto'), ('moradia_kitnet', 'Kitnet')], max_length=255, null=True, verbose_name='Moradia')),
                ('caracteristicas', models.CharField(blank=True, choices=[('caracteristicas_propria', 'Própria'), ('caracteristicas_alugada', 'Alugada'), ('caracteristicas_alvenaria', 'Alvenaria'), ('caracteristicas_cedida', 'Cedida'), ('caracteristicas_palha', 'Palha'), ('caracteristicas_taipa_outros', 'Taipa/Outros')], max_length=255, null=True, verbose_name='Características')),
                ('territorio', models.CharField(blank=True, choices=[('territorio_acessibilidade_interno', 'Acessibilidade para pessoas com dificuldade de locomoção - Interno'), ('territorio_acessibilidade_externo', 'Acessibilidade para pessoas com dificuldade de locomoção - Externo'), ('territorio_acessibilidade_nenhum', 'Acessibilidade para pessoas com dificuldade de locomoção - Nenhum'), ('territorio_local_dificil_acesso_geo', 'Local com difícil acesso geo'), ('territorio_risco_desabamento_alagamento', 'Risco de desabamento e alagamento'), ('territorio_forte_presenca_viol', 'Forte presença de viol')], max_length=255, null=True, verbose_name='Território')),
                ('estruturaRua', models.CharField(blank=True, choices=[('estrutura_rua_asfalto', 'Asfalto'), ('estrutura_rua_picarra', 'Piçarra'), ('estrutura_rua_sem_calcamento', 'Sem calçamento')], max_length=255, null=True, verbose_name='Estrutura da Rua')),
                ('iluminacaoPublica', models.CharField(blank=True, choices=[('iluminacao_publica_com_medidor_proprio', 'Pública com medidor próprio'), ('iluminacao_publica_com_medidor_compartilhado', 'Pública com medidor compartilhado'), ('iluminacao_publica_sem_medidor', 'Pública sem medidor'), ('iluminacao_sem_energia', 'Sem energia')], max_length=255, null=True, verbose_name='Iluminação Pública')),
                ('abastecimento', models.CharField(blank=True, choices=[('abastecimento_rede_geral_distribuicao', 'Rede geral de distribuição'), ('abastecimento_poco_nascente', 'Poço ou nascente'), ('abastecimento_cisterna_agua_chuva', 'Cisterna ou água de chuva'), ('abastecimento_carro_pipa', 'Carro pipa'), ('abastecimento_outra_forma', 'Outra forma')], max_length=255, null=True, verbose_name='Abastecimento de Água')),
                ('consumoAgua', models.CharField(blank=True, choices=[('consumo_agua_filtrada', 'Filtrada'), ('consumo_agua_nao_filtrada', 'Não filtrada'), ('consumo_agua_coada', 'Coada'), ('consumo_agua_fervida', 'Fervida'), ('consumo_agua_comprada', 'Comprada')], max_length=255, null=True, verbose_name='Consumo de Água')),
                ('esgoto', models.CharField(blank=True, choices=[('esgoto_rede_coletora', 'Rede coletora'), ('esgoto_fossa_septica', 'Fossa séptica'), ('esgoto_fossa_rudimentar', 'Fossa rudimentar'), ('esgoto_ceu_aberto', 'Céu aberto'), ('esgoto_domicilio_sem_banheiro', 'Domicílio sem banheiro')], max_length=255, null=True, verbose_name='Esgoto')),
                ('lixo', models.CharField(blank=True, choices=[('lixo_coleta_publica', 'Coleta pública'), ('lixo_queimado', 'Queimado'), ('lixo_ar_livre', 'Ar livre'), ('lixo_enterrado', 'Enterrado')], max_length=255, null=True, verbose_name='Lixo')),
                ('familia', models.CharField(blank=True, choices=[('familia_uso_psicoativa', 'Na família alguém faz uso de psicoativa'), ('familia_pessoas_deficientes', 'Na família tem pessoas deficientes'), ('familia_vivencia_situacao_violencia', 'Vivência em situação de violência')], max_length=255, null=True, verbose_name='Família')),
                ('caracteristicasNumeroComodos', models.CharField(blank=True, max_length=255, null=True, verbose_name='Números de cômodos')),
                ('caracteristicasNumeroDormitorios', models.CharField(blank=True, max_length=255, null=True, verbose_name='Números de dormitórios')),
                ('caracteristicasPessoasPorDormitorios', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pessoas por dormitórios')),
                ('territorioLocalDificilAcessoGeo', models.BooleanField(blank=True, default=False, null=True, verbose_name='Local com difícil acesso geografico')),
                ('territorioRiscoDesabamentoAlagamento', models.BooleanField(blank=True, default=False, null=True, verbose_name='Risco de desabamento e alagamento')),
                ('territorioFortePresencaViol', models.BooleanField(blank=True, default=False, null=True, verbose_name='Forte presença de violencia')),
                ('lixoOutro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro - Lixo')),
                ('familiaUsoPsicoativaQualSpa', models.CharField(blank=True, max_length=255, null=True, verbose_name='Familia usa Psicoativo? Qual?')),
                ('familiaUsoPsicoativaQuem', models.CharField(blank=True, max_length=255, null=True, verbose_name='Familia usa Psicoativo? Quem?')),
                ('familiaPessoasDeficientesQuem', models.CharField(blank=True, max_length=255, null=True, verbose_name='Familia tem deficiente? Quem?')),
                ('familiaVivenciaSituacaoViolenciaObservacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observação')),
            ],
        ),
        migrations.CreateModel(
            name='Cadastro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeroProntuario', models.CharField(max_length=255, verbose_name='Número do prontuario')),
                ('dataAtendimento', models.DateField(verbose_name='Data de Atendimento')),
                ('nome', models.CharField(max_length=100)),
                ('dataNascimento', models.DateField()),
                ('idade', models.IntegerField()),
                ('apelido', models.CharField(max_length=50)),
                ('faixaEtaria', models.CharField(choices=[('crianca', 'Criança'), ('adolescente', 'Adolescente'), ('adulto', 'Adulto'), ('idoso', 'Idoso')], default='adulto', max_length=20)),
                ('naturalidade', models.CharField(max_length=100)),
                ('nacionalidade', models.CharField(max_length=100)),
                ('endereco', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=100)),
                ('zona', models.CharField(max_length=100)),
                ('pontoReferencia', models.CharField(max_length=255)),
                ('telefone', models.CharField(max_length=20)),
                ('pai', models.CharField(max_length=100)),
                ('mae', models.CharField(max_length=100)),
                ('rg', models.CharField(max_length=20)),
                ('cpf', models.CharField(max_length=14)),
                ('tituloEleitor', models.CharField(max_length=20)),
                ('nis', models.CharField(max_length=20)),
                ('carteiraTrabalho', models.CharField(max_length=20)),
                ('reservista', models.CharField(max_length=20)),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=45, null=True)),
                ('orientacaoSexual', models.CharField(max_length=100)),
                ('cor', models.CharField(max_length=50)),
                ('estadoCivil', models.CharField(max_length=50)),
                ('escolaridade', models.CharField(blank=True, choices=[('fundamental_incompleto', 'Fundamental Incompleto'), ('fundamental_completo', 'Fundamental Completo'), ('medio_incompleto', 'Médio Incompleto'), ('medio_completo', 'Médio Completo'), ('superior_incompleto', 'Superior Incompleto'), ('superior_completo', 'Superior Completo'), ('pos_graduacao', 'Pós-graduação'), ('mestrado', 'Mestrado'), ('doutorado', 'Doutorado'), ('outro', 'Outro')], max_length=100, null=True)),
                ('profissao', models.CharField(max_length=100)),
                ('salario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('localTrabalho', models.CharField(max_length=255)),
                ('horarioTrabalho', models.CharField(blank=True, choices=[('meio_periodo', 'Meio Período'), ('integral', 'Integral'), ('outro', 'Outro')], max_length=100, null=True)),
                ('acolhimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cadastro', to='cadastro.acolhimento', verbose_name='Acolhimento')),
                ('caracterizacaoMausTratos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cadastro', to='cadastro.caracterizacaomaustratos', verbose_name='Caracterização em caso de maus tratos ou violência')),
                ('composicaoFamiliar', models.ManyToManyField(blank=True, to='cadastro.composicaofamiliar', verbose_name='Composição Familiar')),
                ('dadosResponsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cadastro', to='cadastro.dadosresponsavel', verbose_name='Dados do Responsável')),
                ('denuncianteConduta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cadastro', to='cadastro.denuncianteconduta', verbose_name='Denunciante e conduta realizada')),
                ('origemDemanda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cadastro', to='cadastro.origemdemanda', verbose_name='Origem de Demanda')),
                ('qmCadastrou', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cadastros_feitos', to=settings.AUTH_USER_MODEL)),
                ('situacaoHabitacional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cadastro', to='cadastro.situacaohabitacional', verbose_name='Situação habitacional')),
            ],
        ),
        migrations.CreateModel(
            name='Beneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(choices=[('cesta_basica', 'Cesta Básica'), ('auxilio_funeario', 'Auxílio Funerário'), ('aluguel_social', 'Aluguel Social'), ('auxilio_enxoval', 'Auxílio Enxoval'), ('auxilio_passagem', 'Auxílio Passagem'), ('ajuda_custo_temporaria', 'Ajuda de Custo Temporária')], max_length=100)),
                ('dataCadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('beneficiado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.cadastro')),
                ('qmCadastrou', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
